head(openDF2014)
## Aantal inspecties per woonplaats per jaar
inspecTab <- table(openDF$woonplaats, openDF$inspectiejaar)
inspecTab
str(inspecTab)
## Conversie tabel naar data frame
inspecDF <- as.data.frame.matrix(inspecTab)
head(inspecDF)
## Bewaar rijnamen
plaatsenVec <- rownames(inspecDF)
cat(plaatsenVec, sep = ", ")
## Barplot van aantal inspecties per woonplaats per jaar
barplot(inspecTab,
xlab = "Jaar",
col=rainbow(9)
)
legend("topleft",
legend = plaatsenVec,
fill=rainbow(9)
)
## Laad de benodigde packages
library(googleVis)
library(gsheet)
library(dplyr)
## Lees data uit Google Spreadsheet
url <- 'https://docs.google.com/spreadsheets/d/1f0qX_BBu-4qhKHa6mBiwbUHmUahrXcHeWieBDD9fiXg'
surveyDF <- gsheet2tbl(url)
surveyDF <- rename(surveyDF, Soort.Risico = `Soort Risico`)
## Bouw Google Bubble Chart
survChart <- gvisBubbleChart(surveyDF,
idvar = "Naam",
xvar = "Waarschijnlijkheid",
yvar = "Gevolg",
colorvar = "Soort.Risico",
options = list(hAxis = '{minValue:1, maxValue:5, title:"Gevolg"}'
,vAxis = '{minValue:1, maxValue:5, title:"Waarschijnlijkheid"}',
width = 700,
height = 700
)
)
plot(survChart)
meanvarDF <- read.csv(file = "https://raw.githubusercontent.com/witusj/R-workshop/gh-pages/Datasets/sessie%203/mean_var.csv", stringsAsFactors = TRUE)
## Laad packages
library(plotly)
## Bouw Plotly Chart
p <- plot_ly(
meanvarDF,
x = ~Waarschijnlijkheid,
y = ~Gevolgen,
color = ~Perc.Kans,
size = ~Spreiding,
text = ~Topic,
#mode = "text+markers",
cmin = 0,
cmax = 2,
colors = c("red", "orange", "white", "light blue" , "dodgerblue")
)
p
## Laad packages
library(plotly)
## Bouw Plotly Chart
p <- plot_ly(
meanvarDF,
x = ~Waarschijnlijkheid,
y = ~Gevolgen,
color = ~Perc.Kans,
size = ~Spreiding,
text = ~Topic,
#mode = "text+markers",
cmin = 0,
cmax = 2,
colors = c("red", "orange", "white", "light blue" , "dodgerblue")
)
p
## Laad packages
library(plotly)
## Bouw Plotly Chart
p <- plot_ly(
meanvarDF,
x = ~Waarschijnlijkheid,
y = ~Gevolgen,
color = ~Perc.Kans,
size = ~Spreiding,
text = ~Topic,
#mode = "text+markers",
cmin = 0,
cmax = 10,
colors = c("red", "orange", "white", "light blue" , "dodgerblue")
)
p
## Laad packages
library(plotly)
## Bouw Plotly Chart
p <- plot_ly(
meanvarDF,
x = ~Waarschijnlijkheid,
y = ~Gevolgen,
color = ~Perc.Kans,
size = ~Spreiding,
text = ~Topic,
#mode = "text+markers",
cmin = 0,
cmax = 10,
colors = c("red", "orange", "white", "light blue" , "dodgerblue")
)  %>%
add_markers() %>%
add_text(textfont = t, textposition = "top right")
p
## Laad packages
library(plotly)
## Bouw Plotly Chart
p <- plot_ly(
meanvarDF,
x = ~Waarschijnlijkheid,
y = ~Gevolgen,
color = ~Perc.Kans,
size = ~Spreiding,
text = ~Topic,
#mode = "text+markers",
cmin = 0,
cmax = 10,
colors = c("red", "orange", "white", "light blue" , "dodgerblue")
)  %>%
add_markers() %>%
add_text(textposition = "top right")
p
## Laad packages
library(plotly)
## Bouw Plotly Chart
p <- plot_ly(
meanvarDF,
x = ~Waarschijnlijkheid,
y = ~Gevolgen,
color = ~Perc.Kans,
size = ~Spreiding,
text = ~Topic,
#mode = "text+markers",
cmin = 0,
cmax = 10,
colors = c("red", "orange", "white", "light blue" , "dodgerblue")
)  %>%
add_markers() %>%
add_text(textfont = list(size = 14), textposition = "top right")
p
## Laad packages
library(plotly)
## Bouw Plotly Chart
# p <- plot_ly(
#   meanvarDF,
#   x = ~Waarschijnlijkheid,
#   y = ~Gevolgen,
#   color = ~Perc.Kans,
#   size = ~Spreiding,
#   text = ~Topic,
#   mode = "text+markers",
#   cmin = 0,
#   cmax = 1,
#   colors = c("red", "orange", "white", "light blue" , "dodgerblue")
# )
p <- plot_ly(meanvarDF,
x = ~Waarschijnlijkheid, y = ~Gevolgen, text = ~Topic, type = 'scatter', mode = 'text+markers',
marker = list(size = ~Spreiding, opacity = 0.5, color = Perc.Kans))
## Laad packages
library(plotly)
## Bouw Plotly Chart
# p <- plot_ly(
#   meanvarDF,
#   x = ~Waarschijnlijkheid,
#   y = ~Gevolgen,
#   color = ~Perc.Kans,
#   size = ~Spreiding,
#   text = ~Topic,
#   mode = "text+markers",
#   cmin = 0,
#   cmax = 1,
#   colors = c("red", "orange", "white", "light blue" , "dodgerblue")
# )
p <- plot_ly(meanvarDF,
x = ~Waarschijnlijkheid, y = ~Gevolgen, text = ~Topic, type = 'scatter', mode = 'text+markers',
marker = list(size = ~Spreiding, opacity = 0.5, color = ~Perc.Kans))
p
## Laad packages
library(plotly)
## Bouw Plotly Chart
# p <- plot_ly(
#   meanvarDF,
#   x = ~Waarschijnlijkheid,
#   y = ~Gevolgen,
#   color = ~Perc.Kans,
#   size = ~Spreiding,
#   text = ~Topic,
#   mode = "text+markers",
#   cmin = 0,
#   cmax = 1,
#   colors = c("red", "orange", "white", "light blue" , "dodgerblue")
# )
p <- plot_ly(meanvarDF,
x = ~Waarschijnlijkheid, y = ~Gevolgen, text = ~Topic, type = 'scatter', mode = 'text+markers',
marker = list(size = ~Spreiding, opacity = 0.5, color = ~Perc.Kans, colors = c("red", "orange", "white", "light blue" , "dodgerblue")))
p
## Laad packages
library(plotly)
## Bouw Plotly Chart
# p <- plot_ly(
#   meanvarDF,
#   x = ~Waarschijnlijkheid,
#   y = ~Gevolgen,
#   color = ~Perc.Kans,
#   size = ~Spreiding,
#   text = ~Topic,
#   mode = "text+markers",
#   cmin = 0,
#   cmax = 1,
#   colors = c("red", "orange", "white", "light blue" , "dodgerblue")
# )
p <- plot_ly(meanvarDF,
x = ~Waarschijnlijkheid, y = ~Gevolgen, text = ~Topic, type = 'scatter', mode = 'text+markers',
marker = list(size = ~Spreiding, opacity = 0.5, color = ~Perc.Kans), colors = c("red", "orange", "white", "light blue" , "dodgerblue"))
p
## Laad packages
library(plotly)
## Bouw Plotly Chart
# p <- plot_ly(
#   meanvarDF,
#   x = ~Waarschijnlijkheid,
#   y = ~Gevolgen,
#   color = ~Perc.Kans,
#   size = ~Spreiding,
#   text = ~Topic,
#   mode = "text+markers",
#   cmin = 0,
#   cmax = 1,
#   colors = c("red", "orange", "white", "light blue" , "dodgerblue")
# )
p <- plot_ly(meanvarDF,
x = ~Waarschijnlijkheid, y = ~Gevolgen, text = ~Topic, type = 'scatter', mode = 'text+markers',
marker = list(size = ~Spreiding, opacity = 1, color = ~Perc.Kans), colors = c("red", "orange", "white", "light blue" , "dodgerblue"))
p
## Laad packages
library(plotly)
## Bouw Plotly Chart
# p <- plot_ly(
#   meanvarDF,
#   x = ~Waarschijnlijkheid,
#   y = ~Gevolgen,
#   color = ~Perc.Kans,
#   size = ~Spreiding,
#   text = ~Topic,
#   mode = "text+markers",
#   cmin = 0,
#   cmax = 1,
#   colors = c("red", "orange", "white", "light blue" , "dodgerblue")
# )
p <- plot_ly(meanvarDF,
x = ~Waarschijnlijkheid, y = ~Gevolgen, text = ~Topic, type = 'scatter', mode = 'text+markers', color = ~Perc.Kans, colors = c("red", "orange", "white", "light blue" , "dodgerblue"),
marker = list(size = ~Spreiding, opacity = 1))
p
## Laad packages
library(plotly)
## Bouw Plotly Chart
# p <- plot_ly(
#   meanvarDF,
#   x = ~Waarschijnlijkheid,
#   y = ~Gevolgen,
#   color = ~Perc.Kans,
#   size = ~Spreiding,
#   text = ~Topic,
#   mode = "text+markers",
#   cmin = 0,
#   cmax = 1,
#   colors = c("red", "orange", "white", "light blue" , "dodgerblue")
# )
p <- plot_ly(meanvarDF,
x = ~Waarschijnlijkheid, y = ~Gevolgen, text = ~Topic, type = 'scatter', mode = 'markers', color = ~Perc.Kans, colors = c("red", "orange", "white", "light blue" , "dodgerblue"),
marker = list(size = ~Spreiding, opacity = 1))
p
## Laad packages
library(plotly)
## Bouw Plotly Chart
# p <- plot_ly(
#   meanvarDF,
#   x = ~Waarschijnlijkheid,
#   y = ~Gevolgen,
#   color = ~Perc.Kans,
#   size = ~Spreiding,
#   text = ~Topic,
#   mode = "text+markers",
#   cmin = 0,
#   cmax = 1,
#   colors = c("red", "orange", "white", "light blue" , "dodgerblue")
# )
p <- plot_ly(meanvarDF,
x = ~Waarschijnlijkheid, y = ~Gevolgen, text = ~Topic, type = 'scatter', mode = 'text+markers', color = ~Perc.Kans, colors = c("red", "orange", "white", "light blue" , "dodgerblue"),
marker = list(size = ~Spreiding, opacity = 1))
p
data <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/school_earnings.csv")
p <- plot_ly(data, x = ~Women, y = ~Men, text = ~School, type = 'scatter', mode = 'markers', color = ~gap, colors = 'Reds',
marker = list(size = ~gap, opacity = 0.5)) %>%
layout(title = 'Gender Gap in Earnings per University',
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE))
p
p <- plot_ly(meanvarDF,
x = ~Waarschijnlijkheid, y = ~Gevolgen, text = ~Topic, type = 'scatter', mode = 'text+markers', color = ~Perc.Kans, colors = c("red", "orange", "white", "light blue" , "dodgerblue"),
marker = list(size = ~Spreiding, opacity = 1))
p
p <- plot_ly(meanvarDF,
x = ~Waarschijnlijkheid, y = ~Gevolgen, text = ~Topic, type = 'scatter', mode = 'text+markers', color = ~Perc.Kans, colors = c("red", "orange", "white", "light blue" , "dodgerblue"),
marker = list(size = ~Spreiding, opacity = 1))
p
data <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/school_earnings.csv")
p <- plot_ly(data, x = ~Women, y = ~Men, text = ~School, type = 'scatter', mode = 'markers', color = ~gap, colors = 'Reds',
marker = list(size = ~gap, opacity = 0.5)) %>%
layout(title = 'Gender Gap in Earnings per University',
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE))
p
View(data)
## Laad packages
library(plotly)
## Bouw Plotly Chart
# p <- plot_ly(
#   meanvarDF,
#   x = ~Waarschijnlijkheid,
#   y = ~Gevolgen,
#   color = ~Perc.Kans,
#   size = ~Spreiding,
#   text = ~Topic,
#   mode = "text+markers",
#   cmin = 0,
#   cmax = 1,
#   colors = c("red", "orange", "white", "light blue" , "dodgerblue")
# )
p <- plot_ly(meanvarDF,
x = ~Waarschijnlijkheid, y = ~Gevolgen, text = ~Topic, type = 'scatter', mode = 'text+markers', color = ~Perc.Kans, colors = c("red"),
marker = list(size = ~Spreiding, opacity = 1))
p
## Laad packages
library(plotly)
## Bouw Plotly Chart
# p <- plot_ly(
#   meanvarDF,
#   x = ~Waarschijnlijkheid,
#   y = ~Gevolgen,
#   color = ~Perc.Kans,
#   size = ~Spreiding,
#   text = ~Topic,
#   mode = "text+markers",
#   cmin = 0,
#   cmax = 1,
#   colors = c("red", "orange", "white", "light blue" , "dodgerblue")
# )
p <- plot_ly(meanvarDF,
x = ~Waarschijnlijkheid, y = ~Gevolgen, text = ~Topic, type = 'scatter', mode = 'text+markers', color = ~Perc.Kans, colors = c("red", "orange", "white", "light blue" , "dodgerblue"),
marker = list(size = ~Spreiding))
p
## Laad packages
library(plotly)
## Bouw Plotly Chart
# p <- plot_ly(
#   meanvarDF,
#   x = ~Waarschijnlijkheid,
#   y = ~Gevolgen,
#   color = ~Perc.Kans,
#   size = ~Spreiding,
#   text = ~Topic,
#   mode = "text+markers",
#   cmin = 0,
#   cmax = 1,
#   colors = c("red", "orange", "white", "light blue" , "dodgerblue")
# )
p <- plot_ly(meanvarDF,
x = ~Waarschijnlijkheid, y = ~Gevolgen, text = ~Topic, type = 'scatter', mode = 'text+markers', color = ~Perc.Kans, colors = c("red", "orange", "white", "light blue" , "dodgerblue"),
marker = list(size = ~Spreiding*10))
p
## Laad packages
library(plotly)
## Bouw Plotly Chart
# p <- plot_ly(
#   meanvarDF,
#   x = ~Waarschijnlijkheid,
#   y = ~Gevolgen,
#   color = ~Perc.Kans,
#   size = ~Spreiding,
#   text = ~Topic,
#   mode = "text+markers",
#   cmin = 0,
#   cmax = 1,
#   colors = c("red", "orange", "white", "light blue" , "dodgerblue")
# )
p <- plot_ly(meanvarDF,
x = ~Waarschijnlijkheid, y = ~Gevolgen, text = ~Topic, type = 'scatter', mode = 'text+markers', color = ~Perc.Kans, colors = c("red", "orange", "white", "light blue" , "dodgerblue"),
marker = list(size = ~Spreiding*100))
p
## Laad packages
library(plotly)
## Bouw Plotly Chart
# p <- plot_ly(
#   meanvarDF,
#   x = ~Waarschijnlijkheid,
#   y = ~Gevolgen,
#   color = ~Perc.Kans,
#   size = ~Spreiding,
#   text = ~Topic,
#   mode = "text+markers",
#   cmin = 0,
#   cmax = 1,
#   colors = c("red", "orange", "white", "light blue" , "dodgerblue")
# )
p <- plot_ly(meanvarDF,
x = ~Waarschijnlijkheid, y = ~Gevolgen, text = ~Topic, type = 'scatter', mode = 'text+markers', color = ~Perc.Kans, colors = c("red", "orange", "white", "light blue" , "dodgerblue"),
marker = list(size = ~Spreiding*70))
p
## Laad packages
library(plotly)
## Bouw Plotly Chart
# p <- plot_ly(
#   meanvarDF,
#   x = ~Waarschijnlijkheid,
#   y = ~Gevolgen,
#   color = ~Perc.Kans,
#   size = ~Spreiding,
#   text = ~Topic,
#   mode = "text+markers",
#   cmin = 0,
#   cmax = 1,
#   colors = c("red", "orange", "white", "light blue" , "dodgerblue")
# )
p <- plot_ly(meanvarDF,
x = ~Waarschijnlijkheid, y = ~Gevolgen, text = ~Topic, type = 'scatter', mode = 'text+markers', color = ~Perc.Kans, colors = c("red", "orange", "white", "light blue" , "dodgerblue"),
marker = list(size = ~Spreiding*50))
p
## Laad packages
library(leaflet)
## Bepaal middelpunt van de kaart
latCtr <- mean(gpsDF$lat)
lonCtr <- mean(gpsDF$lon)
## Bouw de kaart en geef weer
m1 <- leaflet() %>%
addTiles() %>%
setView(lonCtr, latCtr, 12) %>% # map location
# add som circles:
addCircles(color = "Red", lng=gpsDF$lon, lat=gpsDF$lat, 20)
m1
View(gpsDF)
## Laad packages
library(leaflet)
## Bepaal middelpunt van de kaart
latCtr <- mean(gpsDF$lat)
lonCtr <- mean(gpsDF$lon)
## Bouw de kaart en geef weer
m1 <- leaflet() %>%
addTiles() %>%
setView(lonCtr, latCtr, zoom = 12) %>% # map location
# add som circles:
addCircles(color = "Red", lng=gpsDF$lon, lat=gpsDF$lat, 20)
m1
## Laad packages
# library(leaflet)
# ## Bepaal middelpunt van de kaart
# latCtr <- mean(gpsDF$lat)
# lonCtr <- mean(gpsDF$lon)
#
# ## Bouw de kaart en geef weer
# m1 <- leaflet() %>%
#   addTiles() %>%
#   setView(lonCtr, latCtr, zoom = 12) %>% # map location
#   # add som circles:
#   addCircles(color = "Red", lng=gpsDF$lon, lat=gpsDF$lat, 20)
# m1
library(leaflet)
map <- leaflet() %>% addTiles() %>%
setView(lat = 48.208531, lng=16.372968, zoom = 14) %>%
addCircleMarkers(lat=48.208531, lng=16.372968 ,
popup="Vienna City Center - Stehpansdom") %>%
addMarkers(lat=48.202806, lng=16.368848 ,
popup="Vienna City Center - Wiener Staatsoper") %>%
addMarkers(lat=48.212993, lng=16.360924 ,
popup="Vienna City Center - Universitaet Wien") %>%
addCircles(lat=48.208531, lng=16.372968 , fillColor = "transparent", radius=1100 )
map
## Laad packages
library(leaflet)
## Bepaal middelpunt van de kaart
latCtr <- mean(gpsDF$lat)
lonCtr <- mean(gpsDF$lon)
## Bouw de kaart en geef weer
m1 <- leaflet() %>%
%>% addProviderTiles(providers$OpenStreetMap) %>%
## Laad packages
library(leaflet)
## Bepaal middelpunt van de kaart
latCtr <- mean(gpsDF$lat)
lonCtr <- mean(gpsDF$lon)
## Bouw de kaart en geef weer
m1 <- leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addTiles() %>%
setView(lonCtr, latCtr, zoom = 12) %>% # map location
# add som circles:
addCircles(color = "Red", lng=gpsDF$lon, lat=gpsDF$lat, 20)
m1
rmarkdown::render_site()
setwd("~/Documents/Github/witusj/workshopr")
rmarkdown::render_site()
rmarkdown::render_site("index.rmd")
install.packages("rmarkdown")
library("rmarkdown")
rmarkdown::render_site("index.rmd")
render_site()
render_site()
rmarkdown::render_site("index.rmd")
